import { z } from "zod";
export declare const PayProtocolGeneralSchema: z.ZodObject<{
    Amount: z.ZodString;
    Order: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    Amount: string;
    Order?: string | undefined;
}, {
    Amount: string;
    Order?: string | undefined;
}>;
export declare const PayProtocolResponseSchema: z.ZodObject<z.objectUtil.extendShape<{
    Amount: z.ZodString;
    Order: z.ZodOptional<z.ZodString>;
}, {
    Id: z.ZodString;
    ACode: z.ZodString;
    CCode: z.ZodString;
    Sign: z.ZodString;
    Fild1: z.ZodString;
    Fild2: z.ZodString;
    Fild3: z.ZodString;
    Bank: z.ZodOptional<z.ZodString>;
    TransType: z.ZodOptional<z.ZodString>;
    Payments: z.ZodOptional<z.ZodString>;
    UserId: z.ZodOptional<z.ZodString>;
    Brand: z.ZodOptional<z.ZodString>;
    Issuer: z.ZodOptional<z.ZodString>;
    L4digit: z.ZodOptional<z.ZodString>;
    street: z.ZodOptional<z.ZodString>;
    city: z.ZodOptional<z.ZodString>;
    zip: z.ZodOptional<z.ZodString>;
    cell: z.ZodOptional<z.ZodString>;
    Coin: z.ZodOptional<z.ZodString>;
    Tmonth: z.ZodOptional<z.ZodString>;
    Tyear: z.ZodOptional<z.ZodString>;
    Hesh: z.ZodOptional<z.ZodString>;
    UID: z.ZodOptional<z.ZodString>;
    spType: z.ZodOptional<z.ZodString>;
    bincard: z.ZodOptional<z.ZodString>;
}>, "strip", z.ZodTypeAny, {
    Amount: string;
    Id: string;
    ACode: string;
    CCode: string;
    Sign: string;
    Fild1: string;
    Fild2: string;
    Fild3: string;
    city?: string | undefined;
    street?: string | undefined;
    Order?: string | undefined;
    Bank?: string | undefined;
    TransType?: string | undefined;
    Payments?: string | undefined;
    UserId?: string | undefined;
    Brand?: string | undefined;
    Issuer?: string | undefined;
    L4digit?: string | undefined;
    zip?: string | undefined;
    cell?: string | undefined;
    Coin?: string | undefined;
    Tmonth?: string | undefined;
    Tyear?: string | undefined;
    Hesh?: string | undefined;
    UID?: string | undefined;
    spType?: string | undefined;
    bincard?: string | undefined;
}, {
    Amount: string;
    Id: string;
    ACode: string;
    CCode: string;
    Sign: string;
    Fild1: string;
    Fild2: string;
    Fild3: string;
    city?: string | undefined;
    street?: string | undefined;
    Order?: string | undefined;
    Bank?: string | undefined;
    TransType?: string | undefined;
    Payments?: string | undefined;
    UserId?: string | undefined;
    Brand?: string | undefined;
    Issuer?: string | undefined;
    L4digit?: string | undefined;
    zip?: string | undefined;
    cell?: string | undefined;
    Coin?: string | undefined;
    Tmonth?: string | undefined;
    Tyear?: string | undefined;
    Hesh?: string | undefined;
    UID?: string | undefined;
    spType?: string | undefined;
    bincard?: string | undefined;
}>;
export declare const HypPaymentLinkRequestSchema: z.ZodObject<z.objectUtil.extendShape<{
    Amount: z.ZodString;
    Order: z.ZodOptional<z.ZodString>;
}, {
    Masof: z.ZodString;
    PassP: z.ZodString;
    KEY: z.ZodString;
    action: z.ZodLiteral<"APISign">;
    What: z.ZodLiteral<"SIGN">;
    Info: z.ZodString;
    Sign: z.ZodEnum<["True", "False"]>;
    UTF8: z.ZodEnum<["True", "False"]>;
    UTF8out: z.ZodEnum<["True", "False"]>;
    Tash: z.ZodString;
    FixTash: z.ZodOptional<z.ZodEnum<["True", "False"]>>;
    sendemail: z.ZodOptional<z.ZodEnum<["True", "False"]>>;
    MoreData: z.ZodOptional<z.ZodEnum<["True", "False"]>>;
    J5: z.ZodOptional<z.ZodLiteral<"True">>;
    SendHesh: z.ZodOptional<z.ZodEnum<["True", "False"]>>;
    heshDesc: z.ZodOptional<z.ZodEnum<["True", "False"]>>;
    Pritim: z.ZodOptional<z.ZodEnum<["True", "False"]>>;
    UserId: z.ZodString;
    ClientName: z.ZodString;
    ClientLName: z.ZodOptional<z.ZodString>;
    street: z.ZodOptional<z.ZodString>;
    city: z.ZodOptional<z.ZodString>;
    zip: z.ZodOptional<z.ZodString>;
    phone: z.ZodOptional<z.ZodString>;
    cell: z.ZodOptional<z.ZodString>;
    email: z.ZodOptional<z.ZodString>;
}>, "strip", z.ZodTypeAny, {
    Amount: string;
    Sign: "True" | "False";
    UserId: string;
    Masof: string;
    PassP: string;
    KEY: string;
    action: "APISign";
    What: "SIGN";
    Info: string;
    UTF8: "True" | "False";
    UTF8out: "True" | "False";
    Tash: string;
    ClientName: string;
    city?: string | undefined;
    street?: string | undefined;
    email?: string | undefined;
    Order?: string | undefined;
    zip?: string | undefined;
    cell?: string | undefined;
    FixTash?: "True" | "False" | undefined;
    sendemail?: "True" | "False" | undefined;
    MoreData?: "True" | "False" | undefined;
    J5?: "True" | undefined;
    SendHesh?: "True" | "False" | undefined;
    heshDesc?: "True" | "False" | undefined;
    Pritim?: "True" | "False" | undefined;
    ClientLName?: string | undefined;
    phone?: string | undefined;
}, {
    Amount: string;
    Sign: "True" | "False";
    UserId: string;
    Masof: string;
    PassP: string;
    KEY: string;
    action: "APISign";
    What: "SIGN";
    Info: string;
    UTF8: "True" | "False";
    UTF8out: "True" | "False";
    Tash: string;
    ClientName: string;
    city?: string | undefined;
    street?: string | undefined;
    email?: string | undefined;
    Order?: string | undefined;
    zip?: string | undefined;
    cell?: string | undefined;
    FixTash?: "True" | "False" | undefined;
    sendemail?: "True" | "False" | undefined;
    MoreData?: "True" | "False" | undefined;
    J5?: "True" | undefined;
    SendHesh?: "True" | "False" | undefined;
    heshDesc?: "True" | "False" | undefined;
    Pritim?: "True" | "False" | undefined;
    ClientLName?: string | undefined;
    phone?: string | undefined;
}>;
export type TPaymentLinkRequest = z.infer<typeof HypPaymentLinkRequestSchema>;
export type TPayProtocolResponse = z.infer<typeof PayProtocolResponseSchema>;
//# sourceMappingURL=Payment.d.ts.map